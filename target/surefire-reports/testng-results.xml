<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="2" total="43" passed="39">
  <reporter-output>
  </reporter-output>
  <suite name="EliteCareer AutomationSuite" duration-ms="62584" started-at="2017-04-04T22:01:15Z" finished-at="2017-04-04T22:02:18Z">
    <groups>
    </groups>
    <test name="Regression Test" duration-ms="62584" started-at="2017-04-04T22:01:15Z" finished-at="2017-04-04T22:02:18Z">
      <class name="tests.TestSigninPage">
        <test-method status="PASS" signature="classSetUp()[pri:0, instance:tests.TestSigninPage@17f6480]" name="classSetUp" is-config="true" duration-ms="1034" started-at="2017-04-04T18:02:05Z" finished-at="2017-04-04T18:02:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method status="PASS" signature="testWithEmptyEmailAndEmptyPassword()[pri:0, instance:tests.TestSigninPage@17f6480]" name="testWithEmptyEmailAndEmptyPassword" duration-ms="1693" started-at="2017-04-04T18:02:06Z" finished-at="2017-04-04T18:02:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithEmptyEmailAndEmptyPassword -->
        <test-method status="PASS" signature="testWithEmptyEmailAndValidPassword()[pri:0, instance:tests.TestSigninPage@17f6480]" name="testWithEmptyEmailAndValidPassword" duration-ms="1250" started-at="2017-04-04T18:02:08Z" finished-at="2017-04-04T18:02:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithEmptyEmailAndValidPassword -->
        <test-method status="PASS" signature="testWithInValidEmailAndValidPassword()[pri:0, instance:tests.TestSigninPage@17f6480]" name="testWithInValidEmailAndValidPassword" duration-ms="1396" started-at="2017-04-04T18:02:09Z" finished-at="2017-04-04T18:02:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithInValidEmailAndValidPassword -->
        <test-method status="PASS" signature="testWithInvalidEmailAndInValidPassword()[pri:0, instance:tests.TestSigninPage@17f6480]" name="testWithInvalidEmailAndInValidPassword" duration-ms="926" started-at="2017-04-04T18:02:11Z" finished-at="2017-04-04T18:02:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithInvalidEmailAndInValidPassword -->
        <test-method status="PASS" signature="testWithValidEmailAndEmptyPassword()[pri:0, instance:tests.TestSigninPage@17f6480]" name="testWithValidEmailAndEmptyPassword" duration-ms="1008" started-at="2017-04-04T18:02:12Z" finished-at="2017-04-04T18:02:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithValidEmailAndEmptyPassword -->
        <test-method status="PASS" signature="testWithValidEmailAndInValidPassword()[pri:0, instance:tests.TestSigninPage@17f6480]" name="testWithValidEmailAndInValidPassword" duration-ms="1491" started-at="2017-04-04T18:02:13Z" finished-at="2017-04-04T18:02:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithValidEmailAndInValidPassword -->
        <test-method status="PASS" signature="testWithValidEmailAndValidPassword()[pri:0, instance:tests.TestSigninPage@17f6480]" name="testWithValidEmailAndValidPassword" duration-ms="3271" started-at="2017-04-04T18:02:14Z" finished-at="2017-04-04T18:02:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testWithValidEmailAndValidPassword -->
        <test-method status="PASS" signature="classTearDown()[pri:0, instance:tests.TestSigninPage@17f6480]" name="classTearDown" is-config="true" duration-ms="700" started-at="2017-04-04T18:02:17Z" finished-at="2017-04-04T18:02:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classTearDown -->
      </class> <!-- tests.TestSigninPage -->
      <class name="tests.TestRegisterPage">
        <test-method status="PASS" signature="setUp()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="setUp" is-config="true" duration-ms="3513" started-at="2017-04-04T18:01:12Z" finished-at="2017-04-04T18:01:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method status="PASS" signature="classSetUp()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="classSetUp" is-config="true" duration-ms="2121" started-at="2017-04-04T18:01:16Z" finished-at="2017-04-04T18:01:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classSetUp -->
        <test-method status="PASS" signature="testConfirmPasswordFieldWithValidPasswordAndDifferentConfirmPassword()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testConfirmPasswordFieldWithValidPasswordAndDifferentConfirmPassword" duration-ms="2411" started-at="2017-04-04T18:01:18Z" finished-at="2017-04-04T18:01:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfirmPasswordFieldWithValidPasswordAndDifferentConfirmPassword -->
        <test-method status="PASS" signature="testConfirmPasswordFieldWithValidPasswordAndSameConfirmPassword()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testConfirmPasswordFieldWithValidPasswordAndSameConfirmPassword" duration-ms="2685" started-at="2017-04-04T18:01:20Z" finished-at="2017-04-04T18:01:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testConfirmPasswordFieldWithValidPasswordAndSameConfirmPassword -->
        <test-method status="PASS" signature="testDateOfBirthWithEmptyCredential()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testDateOfBirthWithEmptyCredential" duration-ms="53" started-at="2017-04-04T18:01:23Z" finished-at="2017-04-04T18:01:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDateOfBirthWithEmptyCredential -->
        <test-method status="FAIL" signature="testDateOfBirthWithInvalidCredential()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testDateOfBirthWithInvalidCredential" duration-ms="56" started-at="2017-04-04T18:01:23Z" finished-at="2017-04-04T18:01:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [*] but found [* DateOfBirth can not be empty.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [*] but found [* DateOfBirth can not be empty.]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at tests.TestRegisterPage.testDateOfBirthWithInvalidCredential(TestRegisterPage.java:198)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDateOfBirthWithInvalidCredential -->
        <test-method status="FAIL" signature="testDateOfBirthWithValidCredential()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testDateOfBirthWithValidCredential" duration-ms="55" started-at="2017-04-04T18:01:24Z" finished-at="2017-04-04T18:01:24Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [*] but found [* DateOfBirth can not be empty.]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [*] but found [* DateOfBirth can not be empty.]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at tests.TestRegisterPage.testDateOfBirthWithValidCredential(TestRegisterPage.java:188)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:295)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:90)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:203)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:155)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDateOfBirthWithValidCredential -->
        <test-method status="PASS" signature="testEmailFieldWithEmptyEmail()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testEmailFieldWithEmptyEmail" duration-ms="3326" started-at="2017-04-04T18:01:26Z" finished-at="2017-04-04T18:01:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmailFieldWithEmptyEmail -->
        <test-method status="PASS" signature="testEmailFieldWithInValidEmailId()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testEmailFieldWithInValidEmailId" duration-ms="2734" started-at="2017-04-04T18:01:29Z" finished-at="2017-04-04T18:01:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmailFieldWithInValidEmailId -->
        <test-method status="PASS" signature="testEmailFieldWithValidEmailID()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testEmailFieldWithValidEmailID" duration-ms="2312" started-at="2017-04-04T18:01:32Z" finished-at="2017-04-04T18:01:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmailFieldWithValidEmailID -->
        <test-method status="PASS" signature="testFirstNameWithEmptyField()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testFirstNameWithEmptyField" duration-ms="2246" started-at="2017-04-04T18:01:34Z" finished-at="2017-04-04T18:01:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstNameWithEmptyField -->
        <test-method status="PASS" signature="testFirstNameWithNumericData()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testFirstNameWithNumericData" duration-ms="1085" started-at="2017-04-04T18:01:36Z" finished-at="2017-04-04T18:01:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstNameWithNumericData -->
        <test-method status="PASS" signature="testFirstNameWithOneChar()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testFirstNameWithOneChar" duration-ms="953" started-at="2017-04-04T18:01:37Z" finished-at="2017-04-04T18:01:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstNameWithOneChar -->
        <test-method status="PASS" signature="testFirstNameWithThirtyChar()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testFirstNameWithThirtyChar" duration-ms="919" started-at="2017-04-04T18:01:38Z" finished-at="2017-04-04T18:01:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstNameWithThirtyChar -->
        <test-method status="PASS" signature="testFirstNameWithThirtyOneChar()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testFirstNameWithThirtyOneChar" duration-ms="1199" started-at="2017-04-04T18:01:39Z" finished-at="2017-04-04T18:01:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstNameWithThirtyOneChar -->
        <test-method status="PASS" signature="testFirstNameWithTwoChar()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testFirstNameWithTwoChar" duration-ms="1408" started-at="2017-04-04T18:01:40Z" finished-at="2017-04-04T18:01:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testFirstNameWithTwoChar -->
        <test-method status="PASS" signature="testGenderWithRandomOption()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testGenderWithRandomOption" duration-ms="978" started-at="2017-04-04T18:01:42Z" finished-at="2017-04-04T18:01:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenderWithRandomOption -->
        <test-method status="PASS" signature="testGenderWithoutSelectedOption()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testGenderWithoutSelectedOption" duration-ms="1907" started-at="2017-04-04T18:01:43Z" finished-at="2017-04-04T18:01:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGenderWithoutSelectedOption -->
        <test-method status="PASS" signature="testLastNameWithEmptyField()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testLastNameWithEmptyField" duration-ms="914" started-at="2017-04-04T18:01:45Z" finished-at="2017-04-04T18:01:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLastNameWithEmptyField -->
        <test-method status="PASS" signature="testLastNameWithNumericData()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testLastNameWithNumericData" duration-ms="947" started-at="2017-04-04T18:01:46Z" finished-at="2017-04-04T18:01:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLastNameWithNumericData -->
        <test-method status="PASS" signature="testLastNameWithOneChar()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testLastNameWithOneChar" duration-ms="910" started-at="2017-04-04T18:01:47Z" finished-at="2017-04-04T18:01:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLastNameWithOneChar -->
        <test-method status="PASS" signature="testLastNameWithThirtyChar()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testLastNameWithThirtyChar" duration-ms="993" started-at="2017-04-04T18:01:48Z" finished-at="2017-04-04T18:01:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLastNameWithThirtyChar -->
        <test-method status="PASS" signature="testLastNameWithThirtyOneChar()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testLastNameWithThirtyOneChar" duration-ms="910" started-at="2017-04-04T18:01:49Z" finished-at="2017-04-04T18:01:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLastNameWithThirtyOneChar -->
        <test-method status="PASS" signature="testLastNameWithTwoChar()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testLastNameWithTwoChar" duration-ms="869" started-at="2017-04-04T18:01:49Z" finished-at="2017-04-04T18:01:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLastNameWithTwoChar -->
        <test-method status="PASS" signature="testPasswordFieldWithEmptyPassword()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testPasswordFieldWithEmptyPassword" duration-ms="1008" started-at="2017-04-04T18:01:50Z" finished-at="2017-04-04T18:01:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasswordFieldWithEmptyPassword -->
        <test-method status="PASS" signature="testPasswordFieldWithFiveCharacter()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testPasswordFieldWithFiveCharacter" duration-ms="1363" started-at="2017-04-04T18:01:51Z" finished-at="2017-04-04T18:01:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasswordFieldWithFiveCharacter -->
        <test-method status="PASS" signature="testPasswordFieldWithNumberAndCharacter()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testPasswordFieldWithNumberAndCharacter" duration-ms="926" started-at="2017-04-04T18:01:53Z" finished-at="2017-04-04T18:01:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasswordFieldWithNumberAndCharacter -->
        <test-method status="PASS" signature="testPasswordFieldWithSixCharacter()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testPasswordFieldWithSixCharacter" duration-ms="893" started-at="2017-04-04T18:01:54Z" finished-at="2017-04-04T18:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasswordFieldWithSixCharacter -->
        <test-method status="PASS" signature="testPasswordFieldWithTwentyCharacter()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testPasswordFieldWithTwentyCharacter" duration-ms="927" started-at="2017-04-04T18:01:55Z" finished-at="2017-04-04T18:01:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasswordFieldWithTwentyCharacter -->
        <test-method status="PASS" signature="testPasswordFieldWithTwentyOneCharacter()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testPasswordFieldWithTwentyOneCharacter" duration-ms="937" started-at="2017-04-04T18:01:55Z" finished-at="2017-04-04T18:01:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPasswordFieldWithTwentyOneCharacter -->
        <test-method status="PASS" signature="testPhoneNumberWithCharacter()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testPhoneNumberWithCharacter" duration-ms="894" started-at="2017-04-04T18:01:56Z" finished-at="2017-04-04T18:01:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPhoneNumberWithCharacter -->
        <test-method status="PASS" signature="testPhoneNumberWithEmptyDigitNumber()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testPhoneNumberWithEmptyDigitNumber" duration-ms="880" started-at="2017-04-04T18:01:57Z" finished-at="2017-04-04T18:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPhoneNumberWithEmptyDigitNumber -->
        <test-method status="PASS" signature="testPhoneNumberWithOneDigitNumber()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testPhoneNumberWithOneDigitNumber" duration-ms="982" started-at="2017-04-04T18:01:58Z" finished-at="2017-04-04T18:01:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPhoneNumberWithOneDigitNumber -->
        <test-method status="PASS" signature="testPhoneNumberWithValidSixteenDigitNumber()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testPhoneNumberWithValidSixteenDigitNumber" duration-ms="1934" started-at="2017-04-04T18:01:59Z" finished-at="2017-04-04T18:02:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testPhoneNumberWithValidSixteenDigitNumber -->
        <test-method status="PASS" signature="testUserTypeWithRandomOption()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testUserTypeWithRandomOption" duration-ms="983" started-at="2017-04-04T18:02:01Z" finished-at="2017-04-04T18:02:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserTypeWithRandomOption -->
        <test-method status="PASS" signature="testUserTypeWithoutSelectedOption()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="testUserTypeWithoutSelectedOption" duration-ms="1915" started-at="2017-04-04T18:02:02Z" finished-at="2017-04-04T18:02:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUserTypeWithoutSelectedOption -->
        <test-method status="PASS" signature="classTearDown()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="classTearDown" is-config="true" duration-ms="1303" started-at="2017-04-04T18:02:04Z" finished-at="2017-04-04T18:02:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- classTearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:tests.TestRegisterPage@6fadae5d]" name="tearDown" is-config="true" duration-ms="195" started-at="2017-04-04T18:02:18Z" finished-at="2017-04-04T18:02:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- tests.TestRegisterPage -->
    </test> <!-- Regression Test -->
  </suite> <!-- EliteCareer AutomationSuite -->
</testng-results>
