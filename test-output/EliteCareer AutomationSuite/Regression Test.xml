<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite hostname="Muhammads-MacBook-Pro.local" ignored="4" name="Regression Test" tests="43" failures="1" timestamp="17 Apr 2017 03:33:32 GMT" time="73.27" errors="0">
  <testcase name="testJobSearchWithRandomlySelectedCategory" time="3.249" classname="tests.TestJobSearchPage"/>
  <testcase name="testJobSearchWithoutSelectionCategory" time="1.852" classname="tests.TestJobSearchPage"/>
  <testcase name="testConfirmPasswordFieldWithValidPasswordAndDifferentConfirmPassword" time="3.083" classname="tests.TestRegisterPage"/>
  <testcase name="testConfirmPasswordFieldWithValidPasswordAndSameConfirmPassword" time="1.153" classname="tests.TestRegisterPage"/>
  <testcase name="testDateOfBirthWithEmptyCredential" time="1.672" classname="tests.TestRegisterPage"/>
  <testcase name="testDateOfBirthWithFutureDateCredential" time="1.798" classname="tests.TestRegisterPage"/>
  <testcase name="testDateOfBirthWithValidCredential" time="0.902" classname="tests.TestRegisterPage">
    <failure type="java.lang.AssertionError" message="expected [*] but found [* Invalid DateOfBirth]">
      <![CDATA[java.lang.AssertionError: expected [*] but found [* Invalid DateOfBirth]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at tests.TestRegisterPage.testDateOfBirthWithValidCredential(TestRegisterPage.java:156)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:126)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:152)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:57)
]]>
    </failure>
  </testcase> <!-- testDateOfBirthWithValidCredential -->
  <testcase name="testEmailFieldWithEmptyEmail" time="1.073" classname="tests.TestRegisterPage"/>
  <testcase name="testEmailFieldWithInValidEmailId" time="0.913" classname="tests.TestRegisterPage"/>
  <testcase name="testEmailFieldWithValidEmailID" time="1.041" classname="tests.TestRegisterPage"/>
  <testcase name="testFirstNameWithEmptyField" time="0.872" classname="tests.TestRegisterPage"/>
  <testcase name="testFirstNameWithNumericData" time="1.06" classname="tests.TestRegisterPage"/>
  <testcase name="testFirstNameWithOneChar" time="1.809" classname="tests.TestRegisterPage"/>
  <testcase name="testFirstNameWithThirtyChar" time="0.942" classname="tests.TestRegisterPage"/>
  <testcase name="testFirstNameWithThirtyOneChar" time="0.944" classname="tests.TestRegisterPage"/>
  <testcase name="testFirstNameWithTwoChar" time="0.877" classname="tests.TestRegisterPage"/>
  <testcase name="testGenderWithRandomOption" time="1.425" classname="tests.TestRegisterPage"/>
  <testcase name="testGenderWithoutSelectedOption" time="2.724" classname="tests.TestRegisterPage"/>
  <testcase name="testLastNameWithEmptyField" time="1.769" classname="tests.TestRegisterPage"/>
  <testcase name="testLastNameWithNumericData" time="0.881" classname="tests.TestRegisterPage"/>
  <testcase name="testLastNameWithOneChar" time="0.91" classname="tests.TestRegisterPage"/>
  <testcase name="testLastNameWithThirtyChar" time="1.959" classname="tests.TestRegisterPage"/>
  <testcase name="testLastNameWithThirtyOneChar" time="1.913" classname="tests.TestRegisterPage"/>
  <testcase name="testLastNameWithTwoChar" time="0.941" classname="tests.TestRegisterPage"/>
  <testcase name="testPasswordFieldWithEmptyPassword" time="1.409" classname="tests.TestRegisterPage"/>
  <testcase name="testPasswordFieldWithFiveCharacter" time="1.062" classname="tests.TestRegisterPage"/>
  <testcase name="testPasswordFieldWithNumberAndCharacter" time="0.905" classname="tests.TestRegisterPage"/>
  <testcase name="testPasswordFieldWithSixCharacter" time="0.884" classname="tests.TestRegisterPage"/>
  <testcase name="testPasswordFieldWithTwentyCharacter" time="0.97" classname="tests.TestRegisterPage"/>
  <testcase name="testPasswordFieldWithTwentyOneCharacter" time="1.092" classname="tests.TestRegisterPage"/>
  <testcase name="testPhoneNumberWithEmptyDigitNumber" time="1.981" classname="tests.TestRegisterPage"/>
  <testcase name="testPhoneNumberWithThirtyDigitNumber" time="0.983" classname="tests.TestRegisterPage"/>
  <testcase name="testPhoneNumberWithThreeDigitNumber" time="0.886" classname="tests.TestRegisterPage"/>
  <testcase name="testPhoneNumberWithTwpDigitNumber" time="0.91" classname="tests.TestRegisterPage"/>
  <testcase name="testUserTypeWithRandomOption" time="1.153" classname="tests.TestRegisterPage"/>
  <testcase name="testUserTypeWithoutSelectedOption" time="1.888" classname="tests.TestRegisterPage"/>
  <testcase name="testWithEmptyEmailAndEmptyPassword" time="2.043" classname="tests.TestSigninPage"/>
  <testcase name="testWithEmptyEmailAndValidPassword" time="2.217" classname="tests.TestSigninPage"/>
  <testcase name="testWithInValidEmailAndValidPassword" time="1.539" classname="tests.TestSigninPage"/>
  <testcase name="testWithInvalidEmailAndInValidPassword" time="1.095" classname="tests.TestSigninPage"/>
  <testcase name="testWithValidEmailAndEmptyPassword" time="1.13" classname="tests.TestSigninPage"/>
  <testcase name="testWithValidEmailAndInValidPassword" time="1.381" classname="tests.TestSigninPage"/>
  <testcase name="testWithValidEmailAndValidPassword" time="3.124" classname="tests.TestSigninPage"/>
  <testcase name="@BeforeSuite setUp" time="0.0" classname="base.TestBase">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUp -->
  <testcase name="@BeforeSuite setUp" time="0.0" classname="base.TestBase">
    <ignored/>
  </testcase> <!-- @BeforeSuite setUp -->
  <testcase name="@AfterSuite tearDown" time="0.0" classname="base.TestBase">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
  <testcase name="@AfterSuite tearDown" time="0.0" classname="base.TestBase">
    <ignored/>
  </testcase> <!-- @AfterSuite tearDown -->
</testsuite> <!-- Regression Test -->
